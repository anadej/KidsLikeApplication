{"version":3,"sources":["components/footer/FooterStyled.js","components/footer/Footer.js","services/task_api.js","redux/tasks/tasksOperations.js","images/excl.svg","redux/planningTasks/planningTasksSelector.js","images/selectDay.svg","images/selectOk.svg","components/dayList/DayListStyled.js","images/checkbox-true.svg","images/checkbox-false.svg","components/dayList/DayList.js","components/taskAddIcon/TaskAddIconStyled.js","components/taskAddIcon/TaskAddIcon.js","components/taskStatusIcon/TaskStatusIcon.js","images/thick.svg","components/taskToggle/TaskToggle.js","components/cardList/card/CardStyled.js","components/cardList/card/Card.js","components/awards/awardsCard/AwardsCard.js","components/cardList/CardListStyled.js","components/cardList/CardList.js"],"names":["FooterStyled","styled","footer","Footer","className","width","height","viewBox","fill","xmlns","clipPath","d","id","axios","defaults","baseURL","createNewTask","task","a","post","setDaysSingleTask","taskId","date","patch","toggleStateTask","createTaskOperation","dispatch","getState","createTaskRequest","res","createTaskSuccess","data","createTaskError","message","setDaysSingleTaskOperation","setDaysTaskRequest","setDaysTaskSuccess","setDaysTaskError","toggleTaskOperation","toggleTaskRequest","toggleTaskSuccess","toggleTaskError","_path","getSelectedDateId","state","planningSelectedDateId","DayListStyled","ul","DayList","days","useDispatch","dataInitial","map","day","isActive","getLocalShortDayName","formatDate","Date","Intl","DateTimeFormat","weekday","format","onHandleChange","e","splice","target","value","checked","daysOfTask","getDateId","dateData","getDay","name","_id","type","onChange","htmlFor","src","checkedIcon","alt","uncheckedIcon","TaskAddIconStyled","div","TaskAddIcon","exactDate","isTaskScheduled","taskStatusRequest","useState","taskMenuState","setTaskMenuState","useEffect","window","addEventListener","closeDayList","removeEventListener","path","attributes","nodeValue","nodeName","onTaskStateToggle","okIcon","onClick","addIcon","idatt","TaskStatusIcon","isTaskHaveBeenCompleted","completionStatus","cx","cy","r","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_excluded","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgExcl","_ref","svgRef","title","titleId","props","ref","ForwardRef","SvgThick","TaskToggle","onTaskToggle","isChecked","onAwardsToggle","awardId","location","useLocation","pathname","onColor","offColor","onHandleColor","handleDiameter","boxShadow","CardItemStyled","li","Card","currentDateId","selectedDate","previousDay","presentDay","selectedDropdownDate","useSelector","isExactDate","imageUrl","reward","n","text","n1","Math","abs","declOfNum","isCompleted","previousValue","AwardsCard","award","onToggleGetAwardsId","price","isSelected","toggleAwardSuccess","CardListStyled","CardList","activeTasks","tasks","awards","featureDay","filter","Boolean"],"mappings":"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","file":"static/js/0.4713c814.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FooterStyled = styled.footer`\n  text-align: center;\n\n  margin: 40px 0px 80px;\n\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 10px;\n  line-height: 1.2;\n  letter-spacing: 0.08em;\n\n  color: #858598;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    align-items: baseline;\n    justify-content: center;\n\n    margin: 50px 0px 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-end;\n  }\n\n  .footerLogo {\n    @media screen and (min-width: 768px) {\n      padding-right: 10px;\n    }\n  }\n\n  .footerLogoIcon {\n    margin-left: 4px;\n  }\n\n  .footerSlogan {\n    @media screen and (min-width: 768px) {\n      margin: 0;\n      padding: 0 10px;\n      border-right: 1px solid #e3e2e7;\n      border-left: 1px solid #e3e2e7;\n    }\n  }\n\n  .footerYear {\n    @media screen and (min-width: 768px) {\n      padding-left: 10px;\n    }\n  }\n`;\n","import { FooterStyled } from \"./FooterStyled\";\n\nconst Footer = () => {\n  return (\n    <FooterStyled>\n      <span className=\"footerLogo\">\n        KidsLike\n        <svg\n          className=\"footerLogoIcon\"\n          width=\"12\"\n          height=\"12\"\n          viewBox=\"0 0 12 12\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <g clipPath=\"url(#clip0)\">\n            <path\n              d=\"M10.249 6.79992C10.2491 6.79644 10.2492 6.79305 10.2492 6.78957C10.2492 6.07665 9.66908 5.49657 8.95607 5.49657H8.60313L10.1506 1.76442C10.4233 1.10588 10.1095 0.348 9.45082 0.0749895C8.7921 -0.197838 8.03422 0.116097 7.76139 0.77482L6.79432 3.10942L5.82734 0.774728C5.55442 0.116097 4.79655 -0.197838 4.13791 0.0749895C3.47928 0.347909 3.16535 1.10569 3.43817 1.76432L4.27826 3.79259C4.17225 3.85521 4.07602 3.93248 3.99216 4.02165C3.75614 3.7708 3.4216 3.6136 3.05081 3.61351C2.3378 3.61351 1.75781 4.19359 1.75781 4.9066V7.73092C1.75781 10.072 3.66239 11.9766 6.00349 11.9766C8.34449 11.9766 10.2491 10.072 10.2491 7.73092L10.249 6.79992ZM4.40708 0.724649C4.70746 0.600137 5.05317 0.743417 5.17768 1.04389L6.46949 4.16264C6.52397 4.29402 6.65214 4.37972 6.79432 4.37972C6.9365 4.37972 7.06468 4.29402 7.11915 4.16264L8.41096 1.04389C8.53547 0.743417 8.88118 0.600137 9.18165 0.724557C9.48213 0.849161 9.62532 1.19486 9.5009 1.49525L7.84187 5.49657H6.2266L6.22669 4.9066C6.2266 4.20439 5.66373 3.63155 4.96555 3.61433L4.08783 1.49534C3.96332 1.19486 4.1066 0.849161 4.40708 0.724649ZM4.9336 5.49657C4.7212 5.49657 4.52079 5.54839 4.34382 5.63958V4.9066C4.34382 4.58132 4.6084 4.31673 4.9336 4.31673C5.25889 4.31673 5.52348 4.58141 5.52357 4.9066L5.52348 5.49657H4.9336ZM2.46094 4.9066C2.46094 4.58132 2.72553 4.31664 3.05072 4.31664C3.37601 4.31673 3.6406 4.58141 3.64069 4.9066V6.78948C3.6406 7.11468 3.37601 7.37926 3.05081 7.37926C2.72562 7.37926 2.46094 7.11468 2.46094 6.78948V4.9066ZM6.00349 11.2735C4.12134 11.2735 2.57749 9.79791 2.46753 7.94286C2.64285 8.03185 2.84097 8.08248 3.05081 8.08248C3.4216 8.08248 3.75623 7.92529 3.99225 7.67434C4.22828 7.92529 4.56281 8.08248 4.93369 8.08248H8.01463C8.20881 8.08248 8.36619 7.9251 8.36619 7.73092C8.36619 7.53683 8.20881 7.37936 8.01463 7.37936H4.93369C4.6085 7.37936 4.34382 7.11468 4.34382 6.78948C4.34391 6.46428 4.6085 6.1997 4.93369 6.1997H5.87495C5.87504 6.1997 5.87504 6.1997 5.87504 6.1997H5.87513C5.87513 6.1997 5.87513 6.1997 5.87522 6.1997H8.07487C8.07542 6.1997 8.07606 6.19979 8.07661 6.19979C8.07744 6.19979 8.07817 6.1997 8.07899 6.1997H8.95607C9.28007 6.1997 9.54384 6.46209 9.54604 6.78554C9.54594 6.78875 9.54594 6.79204 9.54594 6.79534V7.73092C9.54594 9.68429 7.95677 11.2735 6.00349 11.2735Z\"\n              fill=\"#FFBC33\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0\">\n              <rect width=\"12\" height=\"12\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      </span>\n      <p className=\"footerSlogan\">Делаем жизнь родителей и детей изи :)</p>\n      <span className=\"footerYear\">2021</span>\n    </FooterStyled>\n  );\n};\n\nexport default Footer;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://kidslikev1.herokuapp.com\";\n\n// export const getActiveTasks = async () => {\n//   try {\n//     return await axios.patch(\"task/active/\");\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\nexport const createNewTask = async (task) => {\n  try {\n    return await axios.post(\"/task\", task);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const setDaysSingleTask = async ({ taskId, date }) => {\n  try {\n    return await axios.patch(`/task/single-active/${taskId}`, date);\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const toggleStateTask = async ({ taskId, date }) => {\n  try {\n    return await axios.patch(`/task/switch/${taskId}`, date);\n  } catch (error) {\n    throw error;\n  }\n};\n","import {\n  createNewTask,\n  // getActiveTasks,\n  setDaysSingleTask,\n  toggleStateTask,\n} from \"../../services/task_api\";\nimport {\n  // getTasksRequest,\n  // getTasksSuccess,\n  // getTasksError,\n  createTaskRequest,\n  createTaskSuccess,\n  createTaskError,\n  setDaysTaskRequest,\n  setDaysTaskSuccess,\n  setDaysTaskError,\n  toggleTaskRequest,\n  toggleTaskSuccess,\n  toggleTaskError,\n} from \"./tasksAction\";\n\nexport const createTaskOperation = (task) => async (dispatch, getState) => {\n  try {\n    dispatch(createTaskRequest());\n    const res = await createNewTask(task);\n    dispatch(createTaskSuccess({ ...res.data }));\n  } catch (error) {\n    dispatch(createTaskError(error.message));\n  }\n};\n\nexport const setDaysSingleTaskOperation =\n  (taskId, date) => async (dispatch) => {\n    try {\n      dispatch(setDaysTaskRequest());\n\n      const res = await setDaysSingleTask({ taskId, date });\n      dispatch(setDaysTaskSuccess(res.data));\n    } catch (error) {\n      dispatch(setDaysTaskError(error.message));\n    }\n  };\n\nexport const toggleTaskOperation =\n  ({ taskId, date }) =>\n  async (dispatch) => {\n    try {\n      dispatch(toggleTaskRequest());\n      const res = await toggleStateTask({ taskId, date });\n      dispatch(toggleTaskSuccess(res.data));\n    } catch (error) {\n      dispatch(toggleTaskError(error.message));\n    }\n  };\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgExcl(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 4,\n    height: 13,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M.832.8h2.976l-.496 7.312H1.328L.832.8zM2.32 12.128c-.43733 0-.80533-.1387-1.104-.416-.288-.288-.432-.6347-.432-1.04s.144-.74133.432-1.008c.288-.27733.656-.416 1.104-.416.448 0 .816.13867 1.104.416.288.26667.432.6027.432 1.008s-.14933.752-.448 1.04c-.288.2773-.65067.416-1.088.416z\",\n    fill: \"#fff\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgExcl);\nexport default __webpack_public_path__ + \"static/media/excl.9d7371bf.svg\";\nexport { ForwardRef as ReactComponent };","export const getSelectedDateId = (state) => state.planningSelectedDateId;\n","export default __webpack_public_path__ + \"static/media/selectDay.a6c42c11.svg\";","export default __webpack_public_path__ + \"static/media/selectOk.2af436b2.svg\";","import styled from \"styled-components\";\n\nexport const DayListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n\n  position: absolute;\n  left: -44px;\n  bottom: 44px;\n\n  width: 114px;\n  height: 208px;\n\n  background-color: #3e7adc;\n  color: #ffffff;\n\n  filter: drop-shadow(4px 6px 15px rgba(0, 0, 0, 0.1));\n  border-radius: 5px;\n\n  .dayListItem {\n    position: relative;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 1.21;\n    display: flex;\n    align-items: center;\n    letter-spacing: 0.02em;\n  }\n\n  .dayListCheckbox {\n    cursor: pointer;\n  }\n\n  .dayListCheckboxIcon {\n    pointer-events: none;\n  }\n\n  .dayListValue {\n    display: flex;\n    justify-content: space-around;\n\n    text-transform: capitalize;\n    width: 50px;\n    cursor: pointer;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/checkbox-true.a13aec7b.svg\";","export default __webpack_public_path__ + \"static/media/checkbox-false.6b3ea5f3.svg\";","import { DayListStyled } from \"./DayListStyled\";\nimport checkedIcon from \"../../images/checkbox-true.svg\";\nimport uncheckedIcon from \"../../images/checkbox-false.svg\";\nimport { useDispatch } from \"react-redux\";\nimport { setDaysSingleTaskOperation } from \"../../redux/tasks/tasksOperations\";\n\nconst DayList = ({ days, taskId }) => {\n  const dispatch = useDispatch();\n  const dataInitial = days.map((day) => day.isActive);\n\n  const getLocalShortDayName = (date) => {\n    const formatDate = new Date(date);\n    let options = { weekday: \"short\" };\n    const weekday = new Intl.DateTimeFormat(\"ru-RU\", options).format(\n      formatDate\n    );\n\n    return weekday;\n  };\n\n  const onHandleChange = (e) => {\n    dataInitial.splice(+e.target.value, 1, e.target.checked);\n    const daysOfTask = { days: dataInitial };\n\n    dispatch(setDaysSingleTaskOperation(taskId, daysOfTask));\n  };\n\n  const getDateId = (dateData) => {\n    const newDate = new Date(dateData);\n    const weekday = newDate.getDay();\n    if (weekday === 0) return 6;\n    else return weekday - 1;\n  };\n\n  return (\n    <DayListStyled>\n      {days.map((day) => (\n        <li className=\"dayListItem\" key={day._id}>\n          <input\n            className=\"dayListCheckbox visually-hidden\"\n            name={day._id}\n            id={day.date}\n            type=\"checkbox\"\n            value={getDateId(day.date)}\n            checked={day.isActive}\n            onChange={onHandleChange}\n          />\n\n          <label htmlFor={day.date} className=\"dayListValue\">\n            {day.isActive ? (\n              <img\n                className=\"dayListCheckboxIcon\"\n                src={checkedIcon}\n                alt={day._id}\n              />\n            ) : (\n              <img\n                className=\"dayListCheckboxIcon\"\n                src={uncheckedIcon}\n                alt={day._id}\n              />\n            )}\n            {getLocalShortDayName(day.date)}\n          </label>\n        </li>\n      ))}\n    </DayListStyled>\n  );\n};\n\nexport default DayList;\n","import styled from \"styled-components\";\n\nexport const TaskAddIconStyled = styled.div`\n  position: relative;\n`;\n","import { useEffect, useState } from \"react\";\nimport addIcon from \"../../images/selectDay.svg\";\nimport okIcon from \"../../images/selectOk.svg\";\nimport DayList from \"../dayList/DayList\";\nimport { TaskAddIconStyled } from \"./TaskAddIconStyled\";\n\nconst TaskAddIcon = ({\n  task,\n  taskId,\n  exactDate,\n  isTaskScheduled,\n  taskStatusRequest,\n}) => {\n  const [taskMenuState, setTaskMenuState] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"click\", closeDayList);\n    return () => {\n      window.removeEventListener(\"click\", closeDayList);\n    };\n  });\n\n  const closeDayList = (e) => {\n    if (\n      e?.path[0]?.attributes[2]?.nodeValue !== taskId &&\n      e.target.nodeName !== \"LABEL\" &&\n      e.target.nodeName !== \"INPUT\"\n    )\n      setTaskMenuState(false);\n  };\n\n  const onTaskStateToggle = (e) => {\n    if (!exactDate) {\n      return setTaskMenuState((taskMenuState) => !taskMenuState);\n    } else {\n      taskStatusRequest(taskId);\n    }\n  };\n\n  return (\n    <div>\n      <TaskAddIconStyled>\n        {taskMenuState && !exactDate && (\n          <DayList days={task.days} taskId={taskId} />\n        )}\n\n        {!exactDate ? (\n          <>\n            {taskMenuState ? (\n              <img\n                src={okIcon}\n                alt=\"ok\"\n                onClick={onTaskStateToggle}\n                idatt={taskId}\n              />\n            ) : (\n              <img\n                src={addIcon}\n                alt=\"add\"\n                onClick={onTaskStateToggle}\n                idatt={taskId}\n              />\n            )}\n          </>\n        ) : (\n          <>\n            {isTaskScheduled ? (\n              <img src={okIcon} alt=\"ok\" onClick={onTaskStateToggle} />\n            ) : (\n              <img src={addIcon} alt=\"add\" onClick={onTaskStateToggle} />\n            )}\n          </>\n        )}\n      </TaskAddIconStyled>\n    </div>\n  );\n};\n\nexport default TaskAddIcon;\n","const TaskStatusIcon = ({ completionStatus }) => {\n  const isTaskHaveBeenCompleted = completionStatus;\n  return (\n    <>\n      {isTaskHaveBeenCompleted ? (\n        <svg\n          width=\"30\"\n          height=\"30\"\n          viewBox=\"0 0 30 30\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#8EC63F\" />\n          <path\n            d=\"M10 14.8519L13.4286 19L20 11\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      ) : (\n        <svg\n          width=\"30\"\n          height=\"30\"\n          viewBox=\"0 0 30 30\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <circle cx=\"15\" cy=\"15\" r=\"15\" fill=\"#FE4B64\" />\n          <path\n            d=\"M13.5195 9.8H16.4955L15.9995 17.112H14.0155L13.5195 9.8ZM15.0075 21.128C14.5702 21.128 14.2022 20.9893 13.9035 20.712C13.6155 20.424 13.4715 20.0773 13.4715 19.672C13.4715 19.2667 13.6155 18.9307 13.9035 18.664C14.1915 18.3867 14.5595 18.248 15.0075 18.248C15.4555 18.248 15.8235 18.3867 16.1115 18.664C16.3995 18.9307 16.5435 19.2667 16.5435 19.672C16.5435 20.0773 16.3942 20.424 16.0955 20.712C15.8075 20.9893 15.4448 21.128 15.0075 21.128Z\"\n            fill=\"white\"\n          />\n        </svg>\n      )}\n    </>\n  );\n};\n\nexport default TaskStatusIcon;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgThick(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 10,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 4.85185L4.42857 9 11 1\",\n    stroke: \"#fff\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThick);\nexport default __webpack_public_path__ + \"static/media/thick.edda1c40.svg\";\nexport { ForwardRef as ReactComponent };","import { useLocation } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport { ReactComponent as ExclIcon } from \"../../images/excl.svg\";\nimport { ReactComponent as ThickIcon } from \"../../images/thick.svg\";\n// this component should be stateless!\n// MUST recieve METHOD to change the state.\n\nconst TaskToggle = ({\n  onTaskToggle,\n  taskId,\n  isChecked,\n  onAwardsToggle,\n  awardId,\n}) => {\n  const location = useLocation().pathname;\n\n  const onTaskStateToggle = () => {\n    location === \"/awards\" ? onAwardsToggle(awardId) : onTaskToggle(taskId);\n  };\n\n  return (\n    <Switch\n      height={18}\n      width={40}\n      onColor=\"#8EC63F\"\n      offColor=\"#FF4965\"\n      onHandleColor=\"#ffffff\"\n      uncheckedIcon={<ExclIcon />}\n      checkedIcon={<ThickIcon />}\n      handleDiameter={14}\n      boxShadow=\"0px 1px 1px rgba(0, 0, 0, 0.25)\"\n      onChange={onTaskStateToggle}\n      checked={isChecked}\n    ></Switch>\n  );\n};\n\nexport default TaskToggle;\n","import styled from \"styled-components\";\n\nexport const CardItemStyled = styled.li`\n  margin-top: 20px;\n  filter: drop-shadow(4px 6px 15px rgba(0, 0, 0, 0.1));\n\n  @media screen and (min-width: 768px) {\n    margin-top: 30px;\n    margin-left: 20px;\n\n    flex-basis: calc((100% - 40px) / 2);\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-top: 20px;\n    flex-basis: ${({ location }) =>\n      location === \"/planning\"\n        ? \"calc((100% - 80px) / 4)\"\n        : \"calc((100% - 60px) / 3)\"};\n  }\n\n  .card__image {\n    display: block;\n    border-radius: 6px 6px 0px 0px;\n    width: 100%;\n  }\n\n  .card__footer {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 14px 20px;\n    background-color: #ffbc33;\n    border-radius: 0px 0px 6px 6px;\n  }\n\n  .card__info {\n    margin-bottom: 3px;\n  }\n\n  .card__taskName {\n    margin-bottom: 4px;\n\n    font-family: \"Montserrat\", sans-serif;\n    color: #000000;\n    text-transform: uppercase;\n\n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.25;\n    letter-spacing: 0.04em;\n  }\n\n  .card__rewardTag {\n    padding: 3px 10px;\n\n    background-color: #5679d7;\n    border-radius: 3px;\n\n    font-family: \"Montserrat\", sans-serif;\n    color: #ffffff;\n    font-weight: 500;\n    font-size: 10px;\n    line-height: 1.2;\n    letter-spacing: 0.04em;\n    text-transform: uppercase;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getSelectedDateId } from \"../../../redux/planningTasks/planningTasksSelector\";\nimport {\n  setDaysSingleTaskOperation,\n  toggleTaskOperation,\n} from \"../../../redux/tasks/tasksOperations\";\nimport TaskAddIcon from \"../../taskAddIcon/TaskAddIcon\";\nimport TaskStatusIcon from \"../../taskStatusIcon/TaskStatusIcon\";\nimport TaskToggle from \"../../taskToggle/TaskToggle\";\nimport { CardItemStyled } from \"./CardStyled\";\n\nconst Card = ({\n  task,\n  currentDateId,\n  selectedDate,\n  previousDay,\n  presentDay,\n}) => {\n  const dispatch = useDispatch();\n  const location = useLocation().pathname;\n  const selectedDropdownDate = useSelector(getSelectedDateId);\n\n  function declOfNum(n, text) {\n    n = Math.abs(n) % 100;\n    const n1 = n % 10;\n    if (n > 10 && n < 20) {\n      return text[2];\n    }\n    if (n1 > 1 && n1 < 5) {\n      return text[1];\n    }\n    if (n1 === 1) {\n      return text[0];\n    }\n    return text[2];\n  }\n\n  const onTaskToggle = (taskId) => {\n    const date = { date: task.days[currentDateId].date };\n\n    dispatch(toggleTaskOperation({ taskId, date }));\n  };\n\n  const isExactDate = () => {\n    return selectedDropdownDate !== \"default\";\n  };\n\n  const selectedDateStatus = () => {\n    if (!isExactDate(selectedDropdownDate)) return 0;\n    return selectedDropdownDate;\n  };\n\n  const taskStatusRequest = (taskId) => {\n    let dataInitial = task.days.map((day) => day.isActive);\n    const previousValue = task.days[selectedDropdownDate].isActive;\n    dataInitial.splice(selectedDropdownDate, 1, !previousValue);\n\n    const daysOfTask = { days: dataInitial };\n\n    dispatch(setDaysSingleTaskOperation(taskId, daysOfTask));\n  };\n\n  return (\n    <CardItemStyled location={location}>\n      <div className=\"card\">\n        <img className=\"card__image\" src={task.imageUrl} alt={task.title} />\n        <div className=\"card__footer\">\n          <div className=\"card__info\">\n            <h3 className=\"card__taskName\">{task.title}</h3>\n            <span className=\"card__rewardTag\">{`${task.reward} ${declOfNum(\n              task.reward,\n              [\"балл\", \"балла\", \"баллов\"]\n            )}`}</span>\n          </div>\n          {location === \"/\" && presentDay && (\n            <TaskToggle\n              taskId={task._id}\n              isChecked={task.days[currentDateId].isCompleted}\n              onTaskToggle={onTaskToggle}\n            />\n          )}\n          {location === \"/\" && previousDay && (\n            <TaskStatusIcon\n              completionStatus={task.days[selectedDate].isCompleted}\n            />\n          )}\n          {location === \"/planning\" ? (\n            <TaskAddIcon\n              task={task}\n              taskId={task._id}\n              exactDate={isExactDate()}\n              isTaskScheduled={task.days[selectedDateStatus()].isActive}\n              taskStatusRequest={taskStatusRequest}\n            />\n          ) : null}\n        </div>\n      </div>\n    </CardItemStyled>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport TaskToggle from \"../../taskToggle/TaskToggle\";\nimport { CardItemStyled } from \"../../cardList/card/CardStyled\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleAwardSuccess } from \"../../../redux/gifts/giftsAction\";\n\nconst AwardsCard = ({ award, onToggleGetAwardsId }) => {\n  const dispatch = useDispatch();\n\n  const onAwardsToggle = (awardId) => {\n    dispatch(toggleAwardSuccess(awardId));\n    onToggleGetAwardsId(awardId);\n  };\n\n  return (\n    <CardItemStyled>\n      <div className=\"cart\">\n        <img className=\"card__image\" src={award.imageUrl} alt={award.title} />\n        <div className=\"card__footer\">\n          <div className=\"card__info\">\n            <h3 className=\"card__taskName\">{award.title}</h3>\n            <span className=\"card__rewardTag\">{award.price} баллов</span>\n          </div>\n          <TaskToggle\n            awardId={award.id}\n            isChecked={award.isSelected}\n            onAwardsToggle={onAwardsToggle}\n          />\n        </div>\n      </div>\n    </CardItemStyled>\n  );\n};\n\nexport default AwardsCard;\n","import styled from \"styled-components\";\n\nexport const CardListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-self: flex-end;\n\n  margin-left: auto;\n  margin-right: auto;\n  margin-inline-end: 0;\n\n  width: 280px;\n  margin-top: -20px;\n\n  @media screen and (min-width: 768px) {\n    width: 600px;\n\n    margin-top: -30px;\n    margin-left: -20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: ${({ location }) =>\n      location === \"/planning\" || location === \"/awards\" ? \"1200px\" : \"900px\"};\n    margin-top: -20px;\n  }\n  list-style: none;\n`;\n","import { useLocation } from \"react-router-dom\";\nimport Card from \"./card/Card\";\nimport AwardsCard from \"../awards/awardsCard/AwardsCard\";\nimport { CardListStyled } from \"./CardListStyled\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleAwardSuccess } from \"../../redux/gifts/giftsAction\";\n\nconst CardList = ({\n  selectedDate,\n  tasks,\n  currentDateId,\n  awards,\n  onToggleGetAwardsId,\n}) => {\n  // const dispatch = useDispatch();\n\n  // const onAwardsToggle = (awardId) => {\n  //   dispatch(toggleAwardSuccess(awardId));\n  //   onToggleGetAwardsId(awardId);\n  // };\n\n  let presentDay = false;\n  let previousDay = false;\n  let featureDay = false;\n  let activeTasks;\n  const location = useLocation().pathname;\n\n  if (selectedDate === currentDateId) {\n    if (location === \"/\") {\n      activeTasks = tasks.filter((task) => task.days[currentDateId].isActive);\n      presentDay = true;\n    }\n  } else if (selectedDate < currentDateId) {\n    activeTasks = tasks.filter((task) => task.days[selectedDate].isActive);\n    previousDay = true;\n  } else if (selectedDate > currentDateId) {\n    activeTasks = tasks.filter((task) => task.days[selectedDate].isActive);\n    featureDay = true;\n  }\n\n  return (\n    <CardListStyled location={location}>\n      {location === \"/awards\" &&\n        awards.map((award) => (\n          <AwardsCard\n            key={award.id}\n            award={award}\n            onToggleGetAwardsId={onToggleGetAwardsId}\n          />\n        ))}\n\n      {previousDay &&\n        Boolean(tasks) &&\n        activeTasks.map((task) => (\n          <Card\n            key={task._id}\n            task={task}\n            selectedDate={selectedDate}\n            previousDay={previousDay}\n          />\n        ))}\n      {presentDay &&\n        Boolean(tasks) &&\n        activeTasks.map((task) => (\n          <Card\n            key={task._id}\n            task={task}\n            currentDateId={currentDateId}\n            presentDay={presentDay}\n          />\n        ))}\n      {featureDay &&\n        Boolean(tasks) &&\n        activeTasks.map((task) => <Card key={task._id} task={task} />)}\n      {location === \"/planning\" &&\n        tasks.map((task) => (\n          <Card key={task._id} task={task} currentDateId={currentDateId} />\n        ))}\n    </CardListStyled>\n  );\n};\n\nexport default CardList;\n"],"sourceRoot":""}