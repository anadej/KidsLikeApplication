{"version":3,"sources":["components/progressBar/ProgressBarStyled.js","components/progressBar/ProgressBar.js","services/gift_api.js","redux/gifts/giftOperations.js","redux/gifts/giftsSelectors.js","images/catModal.png","components/awards/awardsModal/AwardsModalStyled.js","components/awards/awardsModal/AwardsModal.js","components/awards/AwardsStyled.js","components/awards/Awards.js","pages/AwardsPage/AwardsPage.js"],"names":["ProgressBarStyled","styled","div","colors","thirdTextColor","ProgressBar","userPoints","useSelector","getRewardsGained","countPoints","getRewardsPlanned","percent","parseInt","className","axios","defaults","baseURL","getAllGifts","a","get","buyGiftIds","giftIds","patch","getGiftsOperation","dispatch","getState","getGiftsRequest","res","getGiftsSuccess","data","getGiftsError","message","getAwards","state","gifts","items","getAwardsId","giftsId","EwardsModalStyled","modalTextColor","modalBoxShadowColor","primaryBgColor","AwardsModal","setOpenModal","awards","awardsId","modalAwards","filter","award","index","id","onClick","href","sprite","src","catImg","alt","map","imageUrl","title","EwardsStyled","initialState","Ewards","useModal","stateModal","setOptionModal","dispath","useDispatch","location","useLocation","useEffect","pathname","prev","modalName","useState","setGiftIdsState","width","breakPointUserMenu","CardList","onToggleGetAwardsId","awardId","includes","buyGiftsRequest","buyGiftsSuccess","buyGiftsError","buyGiftOperation","Footer","isModalOpen","Modal","handleCloseModal","AwardsPage","Awards"],"mappings":"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","file":"static/js/11.bced2aa4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ProgressBarStyled = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 360px;\n    align-items: flex-end;\n    margin-right: 30px;\n  }\n  .stats-wrapper {\n    margin-bottom: 61px;\n    display: flex;\n    justify-content: center;\n\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n      flex-direction: column-reverse;\n      align-items: center;\n      margin-bottom: 0;\n    }\n    @media screen and (min-width: 1280px) {\n      flex-direction: column;\n      justify-content: space-between;\n      margin-bottom: 0;\n    }\n  }\n  .stats {\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.25;\n    text-align: right;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.thirdTextColor};\n    @media screen and (max-width: 767px) {\n      display: none;\n    }\n    @media screen and (min-width: 768px) {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n  .stats1 {\n    @media screen and (min-width: 768px) {\n      margin-top: 10px;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-top: 0;\n      margin-bottom: 10px;\n    }\n  }\n  .stats-number {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 1.25;\n    text-align: right;\n    letter-spacing: 0.2em;\n    color: #000000;\n    margin-left: 13px;\n  }\n  .progressLibrary_wrapper {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n    @media screen and (min-width: 768px) {\n      width: 350px;\n      margin-bottom: 20px;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 0;\n    }\n  }\n  .secondPoints {\n    font-weight: bold;\n  }\n  .react-sweet-progress-symbol {\n    display: none;\n  }\n  .react-sweet-progress {\n    width: 280px;\n  }\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Progress } from \"react-sweet-progress\";\nimport \"react-sweet-progress/lib/style.css\";\nimport { colors } from \"../../general/styles/colors\";\nimport {\n  getRewardsGained,\n  getRewardsPlanned,\n} from \"../../redux/additionalInfo/additionalInfoSelectors\";\nimport { ProgressBarStyled } from \"./ProgressBarStyled\";\n\nconst ProgressBar = () => {\n  const userPoints = useSelector(getRewardsGained);\n  const countPoints = useSelector(getRewardsPlanned);\n  let percent = 100;\n  if (countPoints) {\n    percent = parseInt((userPoints / countPoints) * 100);\n  }\n  if (userPoints === 0) {\n    percent = 0;\n  }\n\n  return (\n    <ProgressBarStyled colors={colors}>\n      <div className=\"stats-wrapper\">\n        <p className=\"stats stats1\">\n          Заработано баллов за эту неделю:\n          <span className=\"stats-number\">{userPoints}</span>\n        </p>\n\n        <p className=\"stats\">\n          Запланировано баллов на эту неделю:\n          <span className=\"stats-number\">{countPoints}</span>\n        </p>\n      </div>\n\n      <div className=\"progressLibrary_wrapper\">\n        <span className=\"secondPoints\">\n          {userPoints}/{countPoints}\n        </span>\n        <Progress percent={percent > 100 ? 100 : percent} />\n      </div>\n    </ProgressBarStyled>\n  );\n};\n\nexport default ProgressBar;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://kidslikev1.herokuapp.com\";\n\nexport const getAllGifts = async () => {\n  try {\n    return await axios.get(\"/gift\");\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const buyGiftIds = async (giftIds) => {\n  try {\n    return await axios.patch(\"/gift\", giftIds);\n  } catch (error) {\n    throw error;\n  }\n};\n","import { buyGiftIds, getAllGifts } from \"../../services/gift_api\";\nimport {\n  getGiftsRequest,\n  getGiftsError,\n  getGiftsSuccess,\n  buyGiftsError,\n  buyGiftsSuccess,\n  buyGiftsRequest,\n} from \"./giftsAction\";\n\nexport const getGiftsOperation = () => async (dispatch, getState) => {\n  try {\n    dispatch(getGiftsRequest());\n    const res = await getAllGifts();\n    dispatch(getGiftsSuccess(res.data));\n  } catch (error) {\n    dispatch(getGiftsError(error.message));\n  }\n};\n\nexport const buyGiftOperation = (giftIds) => async (dispatch, getState) => {\n  try {\n    dispatch(buyGiftsRequest());\n    const res = await buyGiftIds(giftIds);\n    dispatch(buyGiftsSuccess(res.data));\n  } catch (error) {\n    dispatch(buyGiftsError(error.message));\n  }\n};\n","export const getAwards = (state) => state.gifts.items;\nexport const getAwardsId = (state) => state.gifts.giftsId;\n","export default __webpack_public_path__ + \"static/media/catModal.31bffe23.png\";","import styled from \"styled-components\";\n\nconst EwardsModalStyled = styled.div`\n  background-color: ${({ colors }) => colors.modalTextColor};\n  box-shadow: ${({ colors }) => `15px 15px 20px ${colors.modalBoxShadowColor}`};\n  padding: 60px 20px 10px 20px;\n  width: 280px;\n  min-height: 300px;\n\n  .catImg {\n    position: absolute;\n    width: 130px;\n    height: 150px;\n    transform: translate(50%, -110%);\n  }\n  .iconCloseAwards {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    width: 15px;\n    height: 15px;\n  }\n  .awardsModalTitle {\n    margin-bottom: 25px;\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 1.22;\n    text-align: center;\n  }\n\n  .modalListAwards {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    margin-bottom: -35px;\n  }\n\n  .modalListItemsAwards {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    width: calc(100% / 2);\n    margin-bottom: 35px;\n  }\n\n  .modalListItemsTitleAwards {\n    font-size: 12px;\n    line-height: 1.25;\n\n    letter-spacing: 0.04em;\n  }\n  .modalListItemsImageAwards {\n    margin-bottom: 15px;\n    width: 90px;\n    height: 90px;\n\n    border: 5px solid ${({ colors }) => colors.primaryBgColor};\n    border-radius: 50%;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 130px 40px 50px 40px;\n    width: 600px;\n\n    .catImg {\n      width: 200px;\n      height: 230px;\n      transform: translate(80%, -110%);\n    }\n    .iconCloseAwards {\n      position: absolute;\n      top: 20px;\n      right: 20px;\n      width: 20px;\n      height: 20px;\n    }\n    .awardsModalTitle {\n      font-size: 30px;\n      line-height: 1.25;\n    }\n\n    .modalListAwards {\n      margin-right: -35px;\n    }\n\n    .modalListItemsAwards {\n      margin: 0 35px 35px 0;\n      width: calc((100% / 4) - 35px);\n    }\n  }\n`;\n\nexport default EwardsModalStyled;\n","import React from \"react\";\nimport catImg from \"../../../images/catModal.png\";\n\nimport EwardsModalStyled from \"./AwardsModalStyled\";\nimport { colors } from \"../../../general/styles/colors\";\nimport sprite from \"../../../images/sprite.svg\";\nimport { useSelector } from \"react-redux\";\nimport { getAwards, getAwardsId } from \"../../../redux/gifts/giftsSelectors\";\n\nconst AwardsModal = ({ setOpenModal }) => {\n  const awards = useSelector(getAwards);\n  const awardsId = useSelector(getAwardsId);\n\n  // ++++++++++++++++++++++++++++++Filter awards selected++++++++++++++++++++++++++++++\n  const modalAwards = awards.filter(\n    (award, index) => award.id === awardsId[index]\n  );\n  // ++++++++++++++++++++++++++++++Filter awards selected++++++++++++++++++++++++++++++\n\n  return (\n    <EwardsModalStyled colors={colors}>\n      <svg className=\"iconCloseAwards\" onClick={setOpenModal}>\n        <use href={sprite + \"#icon-close-awards-modal\"} />\n      </svg>\n      <img className=\"catImg\" src={catImg} alt=\"cat\" />\n      <h3 className=\"awardsModalTitle\">Поздравляем! Ты получаешь:</h3>\n\n      <ul className=\"modalListAwards\">\n        {modalAwards.map((award) => (\n          <li className=\"modalListItemsAwards\" key={award.id}>\n            <img\n              className=\"modalListItemsImageAwards\"\n              src={award.imageUrl}\n              alt={award.title}\n            />\n            <h4 className=\"modalListItemsTitleAwards\">{award.title}</h4>\n          </li>\n        ))}\n      </ul>\n    </EwardsModalStyled>\n  );\n};\n\nexport default AwardsModal;\n","import styled from \"styled-components\";\n\nconst EwardsStyled = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  padding-top: 20px;\n\n  .ewardsProgresiveBox {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n  }\n  .awardsLogo {\n    display: flex;\n    align-items: center;\n    margin-bottom: 30px;\n  }\n\n  .ewardSvg {\n    width: 26px;\n    height: 26px;\n    margin-right: 15px;\n  }\n  .awardsBtn {\n    width: 220px;\n    height: 48px;\n    margin-top: 40px;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.25;\n    color: ${({ colors }) => colors.modalTextColor};\n    background-color: ${({ colors }) => colors.primaryBgColor};\n\n    border: none;\n    border-radius: 6px;\n    cursor: pointer;\n  }\n`;\n\nexport default EwardsStyled;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport {\n  buyGiftOperation,\n  getGiftsOperation,\n} from \"../../redux/gifts/giftOperations\";\nimport { getAwards } from \"../../redux/gifts/giftsSelectors\";\nimport useModal from \"../../hooks/useModal\";\nimport CardList from \"../cardList/CardList\";\n// import TaskToggle from \"../../components/taskToggle/TaskToggle\";\nimport Modal from \"../Modal/Modal\";\nimport Footer from \"../footer/Footer\";\nimport EwardsModal from \"./awardsModal/AwardsModal\";\nimport ProgressBar from \"../progressBar/ProgressBar\";\n\nimport EwardsStyled from \"./AwardsStyled\";\nimport sprite from \"../../images/sprite.svg\";\nimport { colors } from \"../../general/styles/colors\";\n\n// const initialState = {\n//   giftIds: [],\n// };\nconst initialState = [];\n\nconst Ewards = () => {\n  const [stateModal, setOpenModal, setOptionModal] = useModal();\n  const dispath = useDispatch();\n  const awards = useSelector(getAwards);\n  const location = useLocation();\n\n  useEffect(() => {\n    dispath(getGiftsOperation());\n\n    location.pathname === \"/awards\"\n      ? setOptionModal((prev) => ({ ...prev, modalName: \"awards\" }))\n      : setOptionModal((prev) => ({ ...prev, modalName: \"header\" }));\n\n    return dispath(getGiftsOperation());\n  }, [location]);\n\n  // ++++++++++++++++++++++++++++++++Logic giftsId++++++++++++++++++++++++++++++++++++++++\n  const [giftIds, setGiftIdsState] = useState(initialState);\n\n  const onToggleGetAwardsId = (awardId) => {\n    setGiftIdsState((prev) => {\n      return prev.includes(awardId) ? [...prev] : [...prev, awardId];\n    });\n  };\n\n  const onHandleClickConfirm = () => {\n    dispath(buyGiftOperation({ giftIds }));\n    setOpenModal();\n  };\n\n  // ++++++++++++++++++++++++++++++++Logic giftsId+++++++++++++++++++++++++++++++++++++++++\n\n  return (\n    <EwardsStyled colors={colors}>\n      <div className=\"ewardsProgresiveBox\">\n        <div className=\"awardsLogo\">\n          <svg className=\"ewardSvg\">\n            <use href={sprite + \"#icon-award\"} />\n          </svg>\n          <h3 className=\"awardsTitle\">Мои призы</h3>\n        </div>\n        {stateModal.width > stateModal.breakPointUserMenu && <ProgressBar />}\n      </div>\n\n      <CardList awards={awards} onToggleGetAwardsId={onToggleGetAwardsId} />\n\n      <button className=\"awardsBtn\" onClick={onHandleClickConfirm}>\n        Подтвердить\n      </button>\n      <Footer />\n      {stateModal.width < stateModal.breakPointUserMenu && <ProgressBar />}\n      {stateModal.isModalOpen && (\n        <Modal handleCloseModal={setOpenModal} modalName={stateModal.modalName}>\n          <EwardsModal setOpenModal={setOpenModal} />\n        </Modal>\n      )}\n    </EwardsStyled>\n  );\n};\n\nexport default Ewards;\n","// import CardList from \"../../components/cardList/CardList\";\nimport Awards from \"../../components/awards/Awards\";\n// import TaskToggle from \"../../components/taskToggle/TaskToggle\";\n// Временно обычные карточки пока, т.к. еще не настроен ответ от бека (по нему отрисовка карточек будет)\n\nconst AwardsPage = () => {\n  return (\n    <>\n      <Awards />\n    </>\n  );\n};\n\nexport default AwardsPage;\n"],"sourceRoot":""}