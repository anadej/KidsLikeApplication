{"version":3,"sources":["redux/tasks/tasksSelector.js","components/progressBar/ProgressBarStyled.js","components/progressBar/ProgressBar.js","pages/HomePage/HomePageStyled.js","components/weekDayTime/weekTabs/WeekTabsStyled.js","components/weekDayTime/weekTabs/WeekTabsData.js","components/weekDayTime/weekTabs/WeekTabs.js","images/planer.png","components/weekDayTime/currentWeek/CurrentWeekStyled.js","components/weekDayTime/currentWeek/CurrentWeek.js","components/weekDayTime/currentDay/CurrentDayStyled.js","components/weekDayTime/currentDay/CurrentDay.js","components/weekDayTime/weekTabContent/WeekTabContentStyled.js","components/weekDayTime/weekTabContent/WeekTabContent.js","pages/HomePage/HomePage.js"],"names":["getTasks","state","tasks","items","getStartWeekDate","additionalInfo","startWeekDate","getEndWeekDate","endWeekDate","getRewardsPlanned","rewardsPlanned","ProgressBarStyled","styled","div","colors","thirdTextColor","ProgressBar","userPoints","useSelector","getRewardsGained","countPoints","percent","parseInt","className","HomePageStyled","primaryBgColor","WeekTabsStyled","ul","primaryTextColor","WeekTabsData","dayFull","dayShort","search","initialState","width","window","innerWidth","breakPoint","WeekTabs","choosenDate","useState","setState","location","useLocation","useEffect","addEventListener","handleResizeWindow","removeEventListener","prev","handleClick","e","activeBtn","document","querySelector","currentTarget","value","prevActiveBtn","setAttribute","map","type","onClick","CurrentWeekStyled","CurrentWeek","startOfTheWeek","getStartOfTheWeek","endOfTheWeek","getEndOfTheWeek","start","moment","format","end","CurrentDayStyled","CurrentDay","selectedDate","monthYear","dateNumber","day","date","russianDay","filter","join","newDate","todayDate","todayDayRaw","todayDay","toUpperCase","slice","WeekTabContentStyled","WeekTabContent","choosenDateTab","isAuthorized","authorizedUser","getCurrentDateName","Date","Intl","DateTimeFormat","weekday","getSelectedDateIdByName","dateName","length","i","checkDay","days","isAnyTasksForChoosenDate","currentDayId","currentDayTasks","task","isActive","Boolean","to","src","planer","alt","CardList","currentDateId","getDay","getCurrentDateId","HomePage","currentDayOfTheWeek","prevState","Footer"],"mappings":"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","file":"static/js/8.cc01615d.chunk.js","sourcesContent":["export const getTasks = (state) => state.tasks.items;\nexport const getStartWeekDate = (state) => state.additionalInfo.startWeekDate;\nexport const getEndWeekDate = (state) => state.additionalInfo.endWeekDate;\nexport const getRewardsPlanned = (state) => state.additionalInfo.rewardsPlanned;\n","import styled from \"styled-components\";\n\nexport const ProgressBarStyled = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 1280px) {\n    max-width: 360px;\n    align-items: flex-end;\n    margin-right: 30px;\n  }\n  .stats-wrapper {\n    margin-bottom: 61px;\n    display: flex;\n    justify-content: center;\n\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\n      flex-direction: column-reverse;\n      align-items: center;\n      margin-bottom: 0;\n    }\n    @media screen and (min-width: 1280px) {\n      flex-direction: column;\n      justify-content: space-between;\n      margin-bottom: 0;\n    }\n  }\n  .stats {\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.25;\n    text-align: right;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.thirdTextColor};\n    @media screen and (max-width: 767px) {\n      display: none;\n    }\n    @media screen and (min-width: 768px) {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n  }\n  .stats1 {\n    @media screen and (min-width: 768px) {\n      margin-top: 10px;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-top: 0;\n      margin-bottom: 10px;\n    }\n  }\n  .stats-number {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 1.25;\n    text-align: right;\n    letter-spacing: 0.2em;\n    color: #000000;\n    margin-left: 13px;\n  }\n  .progressLibrary_wrapper {\n    display: flex;\n    justify-content: space-between;\n    margin-top: 10px;\n    @media screen and (min-width: 768px) {\n      width: 350px;\n      margin-bottom: 20px;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 0;\n    }\n  }\n  .secondPoints {\n    font-weight: bold;\n  }\n  .react-sweet-progress-symbol {\n    display: none;\n  }\n  .react-sweet-progress {\n    width: 280px;\n  }\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Progress } from \"react-sweet-progress\";\nimport \"react-sweet-progress/lib/style.css\";\nimport { colors } from \"../../general/styles/colors\";\nimport {\n  getRewardsGained,\n  getRewardsPlanned,\n} from \"../../redux/additionalInfo/additionalInfoSelectors\";\nimport { ProgressBarStyled } from \"./ProgressBarStyled\";\n\nconst ProgressBar = () => {\n  const userPoints = useSelector(getRewardsGained);\n  const countPoints = useSelector(getRewardsPlanned);\n  let percent = 100;\n  if (countPoints) {\n    percent = parseInt((userPoints / countPoints) * 100);\n  }\n  if (userPoints === 0) {\n    percent = 0;\n  }\n\n  return (\n    <ProgressBarStyled colors={colors}>\n      <div className=\"stats-wrapper\">\n        <p className=\"stats stats1\">\n          Заработано баллов за эту неделю:\n          <span className=\"stats-number\">{userPoints}</span>\n        </p>\n\n        <p className=\"stats\">\n          Запланировано баллов на эту неделю:\n          <span className=\"stats-number\">{countPoints}</span>\n        </p>\n      </div>\n\n      <div className=\"progressLibrary_wrapper\">\n        <span className=\"secondPoints\">\n          {userPoints}/{countPoints}\n        </span>\n        <Progress percent={percent > 100 ? 100 : percent} />\n      </div>\n    </ProgressBarStyled>\n  );\n};\n\nexport default ProgressBar;\n","import styled from \"styled-components\";\n\nexport const HomePageStyled = styled.div`\n  @media screen and (min-width: 1280px) {\n    display: flex;\n  }\n  .home-sidebar {\n    @media screen and (min-width: 1280px) {\n      display: flex;\n      min-width: 240px;\n      margin-left: -50px;\n      background-color: ${({ colors }) => colors.primaryBgColor};\n    }\n  }\n  .right-side {\n    width: 100%;\n  }\n\n  .upside-bar {\n    background-color: ${({ colors }) => colors.primaryBgColor};\n    height: 70px;\n    display: flex;\n    align-items: center;\n    justify-content: space-evenly;\n    margin-left: -94px;\n    margin-right: -94px;\n    margin-bottom: 40px;\n    padding-right: 74px;\n    padding-left: 68px;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const WeekTabsStyled = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 20px;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 376px;\n    height: 70px;\n    padding-top: 0;\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    margin-left: 50px;\n    margin-top: 90px;\n  }\n\n  .weekDays-listItem {\n    font-family: inherit;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 1.25;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.primaryTextColor};\n    text-align: center;\n    border-color: transparent;\n    cursor: pointer;\n    border-radius: 4px;\n    width: 35px;\n    height: 24px;\n    margin-right: 4px;\n    background-color: rgba(255, 188, 51, 0.5);\n\n    @media screen and (min-width: 768px) {\n      width: 40px;\n      height: 26px;\n      margin-right: 16px;\n      background-color: rgba(255, 255, 255, 0.5);\n    }\n\n    @media screen and (min-width: 1280px) {\n      text-align: left;\n      margin: 0;\n      padding: 0;\n      min-width: 190px;\n      min-height: 40px;\n      border-radius: 6px 0px 0px 6px;\n      margin-bottom: 6px;\n      font-size: 14px;\n      line-height: 1.21;\n      padding-left: 27px;\n    }\n  }\n\n  .weekDays-listItem:last-child {\n    margin-right: 0;\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 0;\n    }\n  }\n\n  .weekDays-active {\n    background-color: ${({ colors }) => colors.primaryBgColor};\n    @media screen and (min-width: 768px) {\n      background-color: #ffffff;\n    }\n  }\n`;\n","export const WeekTabsData = [\n  {\n    dayFull: \"Понедельник\",\n    dayShort: \"ПН\",\n    search: \"Monday\",\n  },\n  {\n    dayFull: \"Вторник\",\n    dayShort: \"ВТ\",\n    search: \"Tuesday\",\n  },\n  {\n    dayFull: \"Среда\",\n    dayShort: \"СР\",\n    search: \"Wednesday\",\n  },\n  {\n    dayFull: \"Четверг\",\n    dayShort: \"ЧТ\",\n    search: \"Thursday\",\n  },\n  {\n    dayFull: \"Пятница\",\n    dayShort: \"ПТ\",\n    search: \"Friday\",\n  },\n  {\n    dayFull: \"Суббота\",\n    dayShort: \"СБ\",\n    search: \"Saturday\",\n  },\n  {\n    dayFull: \"Воскресенье\",\n    dayShort: \"ВС\",\n    search: \"Sunday\",\n  },\n];\n","import React, { useState, useEffect } from \"react\";\nimport { WeekTabsStyled } from \"./WeekTabsStyled\";\nimport { useLocation } from \"react-router\";\nimport { WeekTabsData } from \"./WeekTabsData\";\nimport { colors } from \"../../../general/styles/colors\";\n\nconst initialState = {\n  width: window.innerWidth,\n  breakPoint: 1280,\n};\n\nconst WeekTabs = ({ choosenDate }) => {\n  const [state, setState] = useState(initialState);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, [location]);\n\n  const handleResizeWindow = () => {\n    setState((prev) => ({ ...prev, width: window.innerWidth }));\n  };\n\n  const handleClick = (e) => {\n    const activeBtn = document.querySelector(\n      `button[value=${e.currentTarget.value}]`\n    );\n    const prevActiveBtn = document.querySelector(\n      `button[class=\"weekDays-listItem weekDays-active\"]`\n    );\n\n    if (e.currentTarget === activeBtn) {\n      prevActiveBtn?.setAttribute(\"class\", \"weekDays-listItem\");\n      activeBtn.setAttribute(\"class\", \"weekDays-listItem weekDays-active\");\n      choosenDate(activeBtn.value);\n    }\n  };\n\n  return (\n    <>\n      <WeekTabsStyled colors={colors}>\n        {WeekTabsData.map(({ dayFull, dayShort, search }) => (\n          <button\n            key={dayShort}\n            type=\"button\"\n            value={search}\n            onClick={handleClick}\n            className=\"weekDays-listItem\"\n          >\n            {state.width >= state.breakPoint ? (\n              <span>{dayFull}</span>\n            ) : (\n              <span>{dayShort}</span>\n            )}\n          </button>\n        ))}\n      </WeekTabsStyled>\n    </>\n  );\n};\n\nexport default WeekTabs;\n\n//================================================\n\n// 11. WeekTabs(переключатель дней недели на главной\n//странице): Осуществляет работу с query - параметрами.\n//В соответствии с выбранным элементом добавляет к роуту\n//необходимый query - параметр search.\n// (Например: https://kidslike.goit.ua/?day=monday)\n//В зависимости от выбранного роута(с соответствующими\n//query - параметрами) возвращает полученные значения в mainPage.\";\n","export default __webpack_public_path__ + \"static/media/planer.286b326d.png\";","import styled from \"styled-components\";\n\nexport const CurrentWeekStyled = styled.div`\n  @media screen and (max-width: 767px) {\n    margin-bottom: 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 30px;\n  }\n\n  .current-week {\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 1.22;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.primaryTextColor};\n    text-align: center;\n\n    @media screen and (min-width: 768px) {\n      margin-top: 0;\n      margin-bottom: 0;\n    }\n\n    @media screen and (min-width: 1280px) {\n      font-size: 18px;\n      margin: 0;\n      text-align: left;\n    }\n  }\n`;\n","import React from \"react\";\nimport * as moment from \"moment\";\nimport \"moment/locale/ru\";\nimport {\n  getEndOfTheWeek,\n  getStartOfTheWeek,\n} from \"../../../redux/additionalInfo/additionalInfoSelectors\";\nimport { CurrentWeekStyled } from \"./CurrentWeekStyled\";\nimport { useSelector } from \"react-redux\";\nimport { colors } from \"../../../general/styles/colors\";\n\nconst CurrentWeek = () => {\n  const startOfTheWeek = useSelector(getStartOfTheWeek);\n  const endOfTheWeek = useSelector(getEndOfTheWeek);\n\n  const start = startOfTheWeek && moment(startOfTheWeek).format(\"DD\");\n  const end = endOfTheWeek && moment(endOfTheWeek).format(\"D MMMM\");\n\n  return (\n    <CurrentWeekStyled colors={colors}>\n      <p className=\"current-week\">\n        Неделя: {start}-{end}\n      </p>\n    </CurrentWeekStyled>\n  );\n};\n\nexport default CurrentWeek;\n","import styled from \"styled-components\";\n\nexport const CurrentDayStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 61px;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: center;\n    margin-bottom: 103px;\n  }\n  @media screen and (min-width: 1280px) {\n    flex-direction: column;\n    margin-bottom: 0;\n    width: 350px;\n  }\n  .current-day {\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 15px;\n    letter-spacing: 0.2em;\n    color: ${({ colors }) => colors.primaryTextColor};\n    text-align: center;\n    @media screen and (min-width: 1280px) {\n      display: inline-flex;\n    }\n  }\n  .current-tasks {\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.25;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.thirdTextColor};\n    text-align: center;\n\n    margin-bottom: 2px;\n    @media screen and (min-width: 768px) {\n      margin-bottom: 0;\n      margin-right: 20px;\n    }\n    @media screen and (min-width: 1280px) {\n      display: inline-flex;\n    }\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router\";\nimport CurrentWeek from \"../currentWeek/CurrentWeek\";\nimport { CurrentDayStyled } from \"./CurrentDayStyled\";\nimport { colors } from \"../../../general/styles/colors\";\nimport { useSelector } from \"react-redux\";\nimport { getStartOfTheWeek } from \"../../../redux/additionalInfo/additionalInfoSelectors\";\n\nconst initialState = {\n  width: window.innerWidth,\n  breakPoint: 767,\n};\n\nconst CurrentDay = ({ selectedDate }) => {\n  const [state, setState] = useState(initialState);\n  const location = useLocation();\n\n  const startOfTheWeek = useSelector(getStartOfTheWeek);\n\n  const start = startOfTheWeek && moment(startOfTheWeek).format(\"DD\");\n  const monthYear = startOfTheWeek && moment(startOfTheWeek).format(\"MM-YYYY\");\n\n  const daysArray = [\n    {\n      day: \"Monday\",\n      date: +start,\n      russianDay: \"Понедельник\",\n    },\n    {\n      day: \"Tuesday\",\n      date: +start + 1,\n      russianDay: \"Вторник\",\n    },\n    {\n      day: \"Wednesday\",\n      date: +start + 2,\n      russianDay: \"Среда\",\n    },\n    {\n      day: \"Thursday\",\n      date: +start + 3,\n      russianDay: \"Четверг\",\n    },\n    {\n      day: \"Friday\",\n      date: +start + 4,\n      russianDay: \"Пятница\",\n    },\n    {\n      day: \"Saturday\",\n      date: +start + 5,\n      russianDay: \"Суббота\",\n    },\n    {\n      day: \"Sunday\",\n      date: +start + 6,\n      russianDay: \"Воскресенье\",\n    },\n  ];\n\n  const dateNumber = daysArray\n    .filter(({ day }) => day === selectedDate)\n    .map(({ russianDay, date }) => `${russianDay}, ${date}`)\n    .join(\"\");\n\n  const newDate = `${dateNumber}-${monthYear}`;\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, [location]);\n\n  const handleResizeWindow = () => {\n    setState((prev) => ({ ...prev, width: window.innerWidth }));\n  };\n\n  const todayDate = moment().format(\"DD-MM-YYYY\");\n  const todayDayRaw = moment().format(\"dddd\");\n  const todayDay = todayDayRaw[0].toUpperCase() + todayDayRaw.slice(1);\n\n  return (\n    <>\n      {state.width < state.breakPoint && <CurrentWeek />}\n\n      <CurrentDayStyled colors={colors}>\n        {state.width >= 1280 && <CurrentWeek />}\n        {state.width >= 1280 && (\n          <div>\n            <span className=\"current-tasks\">Мoи задачи:</span>\n            <span className=\"current-day\">\n              {dateNumber ? newDate : `${todayDay}, ${todayDate}`}\n            </span>\n          </div>\n        )}\n        {state.width < 1280 && (\n          <>\n            <span className=\"current-tasks\">Мoи задачи:</span>\n            <span className=\"current-day\">\n              {dateNumber ? newDate : `${todayDay}, ${todayDate}`}\n            </span>\n          </>\n        )}\n      </CurrentDayStyled>\n    </>\n  );\n};\n\nexport default CurrentDay;\n","import styled from \"styled-components\";\n\nexport const WeekTabContentStyled = styled.div`\n  @media screen and (min-width: 1280px) {\n    display: flex;\n    justify-content: space-between;\n    padding-top: 40px;\n    flex-direction: column;\n  }\n  .notification {\n    font-family: inherit;\n    font-style: normal;\n    font-weight: bold;\n    font-size: 12px;\n    line-height: 1.25;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: ${({ colors }) => colors.primaryTextColor};\n    margin-bottom: 20px;\n    margin-top: 0;\n  }\n\n  .home-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    width: 220px;\n    height: 48px;\n    background-color: ${({ colors }) => colors.primaryBgColor};\n    border-radius: 6px;\n    color: #fafafa;\n    filter: drop-shadow(0px 2px 4px rgba(0, 0, 0, 0.15));\n    font-family: inherit;\n    font-style: normal;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 1.25;\n    letter-spacing: 0.02em;\n    border-color: transparent;\n    margin: 0 auto;\n    margin-bottom: 61px;\n    cursor: pointer;\n\n    @media screen and (min-width: 768px) {\n      margin-bottom: 103px;\n    }\n    @media screen and (min-width: 1280px) {\n      margin-bottom: 40px;\n    }\n  }\n\n  .children-img {\n    display: none;\n    @media screen and (min-width: 280px) {\n      display: block;\n      width: 320px;\n      height: 111px;\n      margin-left: -20px;\n      margin-right: -20px;\n    }\n    @media screen and (min-width: 768px) {\n      width: 1040px;\n      height: 362px;\n      object-fit: cover;\n      transform: translateX(-15%);\n    }\n    @media screen and (min-width: 1280px) {\n      transform: translateX(0);\n      width: 1040px;\n      margin-left: 0;\n      margin-right: -50px;\n    }\n  }\n\n  .desktop-dayWeek-wrapper {\n    display: flex;\n    justify-content: space-between;\n    padding-left: 110px;\n    padding-right: 30px;\n    margin-bottom: 94px;\n  }\n  .cards-wrapper {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport planer from \"../../../images/planer.png\";\nimport CurrentDay from \"../currentDay/CurrentDay\";\nimport ProgressBar from \"../../progressBar/ProgressBar\";\nimport { WeekTabContentStyled } from \"./WeekTabContentStyled\";\nimport CardList from \"../../cardList/CardList\";\nimport { authorizedUser } from \"../../../redux/auth/authSelectors\";\nimport { useSelector } from \"react-redux\";\nimport { getTasks } from \"../../../redux/tasks/tasksSelector\";\nimport { colors } from \"../../../general/styles/colors\";\nimport { Link } from \"react-router-dom\";\n\nconst initialState = {\n  width: window.innerWidth,\n  breakPoint: 767,\n};\n\nconst WeekTabContent = ({ selectedDate, choosenDateTab }) => {\n  const isAuthorized = useSelector(authorizedUser);\n  const [state, setState] = useState(initialState);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, [location]);\n\n  const handleResizeWindow = () => {\n    setState((prev) => ({ ...prev, width: window.innerWidth }));\n  };\n\n  const tasks = useSelector(getTasks);\n\n  const getCurrentDateId = () => {\n    const date = new Date();\n    const weekday = date.getDay();\n    if (weekday === 0) return 6;\n    else return weekday - 1;\n  };\n\n  const getCurrentDateName = (day) => {\n    const date = new Date(day);\n    let options = { weekday: \"long\" };\n    const weekday = new Intl.DateTimeFormat(\"en-US\", options).format(date);\n\n    return weekday;\n  };\n\n  const getSelectedDateIdByName = (dateName) => {\n    if (!tasks.length) return;\n    for (let i = 0; i < 7; i++) {\n      const checkDay = tasks[0].days[i].date;\n      if (getCurrentDateName(checkDay) === dateName) {\n        return i;\n      }\n    }\n  };\n\n  const isAnyTasksForChoosenDate = () => {\n    const currentDayId = getSelectedDateIdByName(choosenDateTab);\n    const currentDayTasks = tasks.filter(\n      (task) => task?.days[currentDayId]?.isActive\n    );\n    const isCurrentDayHaveTasks = Boolean(currentDayTasks.length);\n    return isCurrentDayHaveTasks;\n  };\n\n  return (\n    <WeekTabContentStyled colors={colors}>\n      {state.width < state.breakPoint ||\n        (state.width >= 1280 && (\n          <div className=\"desktop-dayWeek-wrapper\">\n            <CurrentDay selectedDate={selectedDate} /> <ProgressBar />\n          </div>\n        ))}\n\n      {state.width > state.breakPoint && state.width < 1280 && (\n        <CurrentDay selectedDate={selectedDate} />\n      )}\n\n      {isAuthorized && !isAnyTasksForChoosenDate() && (\n        <>\n          <p className=\"notification\">На этот день задач нет</p>\n          <Link to=\"/planning\" type=\"button\" className=\"home-button\">\n            Запланировать задачи\n          </Link>\n          <img src={planer} alt=\"children\" className=\"children-img\" />\n        </>\n      )}\n\n      {isAuthorized && isAnyTasksForChoosenDate() && (\n        <div className=\"cards-wrapper\">\n          <CardList\n            selectedDate={getSelectedDateIdByName(selectedDate)}\n            tasks={tasks}\n            currentDateId={getCurrentDateId()}\n          />\n        </div>\n      )}\n    </WeekTabContentStyled>\n  );\n};\n\nexport default WeekTabContent;\n","import { HomePageStyled } from \"./HomePageStyled\";\nimport WeekTabs from \"../../components/weekDayTime/weekTabs/WeekTabs\";\nimport WeekTabContent from \"../../components/weekDayTime/weekTabContent/WeekTabContent\";\nimport { colors } from \"../../general/styles/colors\";\nimport Footer from \"../../components/footer/Footer\";\nimport { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router\";\nimport CurrentDay from \"../../components/weekDayTime/currentDay/CurrentDay\";\nimport CurrentWeek from \"../../components/weekDayTime/currentWeek/CurrentWeek\";\n\nconst initialState = {\n  search: \"\",\n  width: window.innerWidth,\n  breakPoint: 1280,\n};\n\nconst HomePage = () => {\n  const [state, setState] = useState(initialState);\n  const location = useLocation();\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResizeWindow);\n    return () => {\n      window.removeEventListener(\"resize\", handleResizeWindow);\n    };\n  }, [location]);\n\n  useEffect(() => {\n    const date = new Date();\n    let options = { weekday: \"long\" };\n    const currentDayOfTheWeek = new Intl.DateTimeFormat(\n      \"en-US\",\n      options\n    ).format(date);\n\n    setState((prevState) => ({ ...prevState, search: currentDayOfTheWeek }));\n  }, []);\n\n  const handleResizeWindow = () => {\n    setState((prev) => ({ ...prev, width: window.innerWidth }));\n  };\n\n  const choosenDate = (date) => {\n    setState((prevState) => ({ ...prevState, search: date }));\n  };\n\n  return (\n    <HomePageStyled colors={colors}>\n      {state.width < state.breakPoint && state.width >= 768 && (\n        <div className=\"upside-bar\">\n          <CurrentWeek />\n          <WeekTabs choosenDate={choosenDate} />\n        </div>\n      )}\n\n      {state.width >= state.breakPoint && (\n        <div className=\"home-sidebar\">\n          <WeekTabs choosenDate={choosenDate} />\n        </div>\n      )}\n\n      {state.width < 767 && (\n        <>\n          <WeekTabs choosenDate={choosenDate} />\n          <>\n            <CurrentDay selectedDate={state.search} />\n          </>\n        </>\n      )}\n\n      <div className=\"right-side\">\n        <WeekTabContent\n          selectedDate={state.search}\n          choosenDateTab={state.search}\n        />\n\n        <Footer />\n      </div>\n    </HomePageStyled>\n  );\n};\n\nexport default HomePage;\n\n//======================================\n// Контейнерный компонент.\n// Дочерние компоненты: WeekTabs, WeekTabContent\n// Помимо базовой разметки, необходимой для размещения элементов\n// на странице, напрямую работает с store.\n// Передает дочерним компонентам пропы для их отрисовки.\n// Осуществляет запросы на сервер.Записывает полученные данные в store.\n//   !!!Отвечает за передачу необходимых пропов в дочерние компоненты.\"\n"],"sourceRoot":""}